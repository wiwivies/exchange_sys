// backend/utils/verifyPassword.js
import crypto from "crypto";

// SQL: CONVERT(NVARCHAR(255), HASHBYTES('SHA2_512', i.PasswordHash), 2)
export const hashPassword = (plainPassword) => {
  const hash = crypto
    .createHash("sha512")
    .update(Buffer.from(plainPassword, "utf16le")) // âœ… SQL NVARCHAR -> UTF-16LE
    .digest("hex")
    .toUpperCase();

  return hash;
};

export const verifyPassword = async (plainPassword, hashedPasswordFromDb) => {
  const hashedInput = hashPassword(plainPassword);

  // console.log("ðŸŸ¦ Ð’Ð²ÐµÐ´ÐµÐ½Ð¸Ð¹ Ð¿Ð°Ñ€Ð¾Ð»ÑŒ:", plainPassword);
  // console.log("ðŸŸ¨ Ð¥ÐµÑˆ Ñ–Ð· Ð²Ð²ÐµÐ´ÐµÐ½Ð¾Ð³Ð¾ (Node):", hashedInput);
  // console.log("ðŸŸ© Ð¥ÐµÑˆ Ñ–Ð· Ð±Ð°Ð·Ð¸:", hashedPasswordFromDb);

  return hashedInput === hashedPasswordFromDb;
};
